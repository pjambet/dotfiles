# set -g default-terminal "xterm-256color"
set -g default-terminal "screen-256color"

bind-key C-a last-window

# Start numbering at 1
set -g base-index 1
set-window-option -g pane-base-index 1

# Allows for faster key repetition
set -s escape-time 0

# Set status bar
set -g status-utf8 on      # enable UTF-8 support in status bar
set -g status-interval 30  # set refresh interval for status bar
set -g status-bg black
set -g status-fg white
# set -g status-left ""
set -g status-left-length 70
set -g status-left "#[fg=green][#h] #[fg=yellow]#(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}')#(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #[fg=red]#(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}')"
# set -g status-right "#[fg=green]#H"


set -g status-right-length 60
set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]: %d %b %Y #[fg=green]:%l:%M %p : #(date -u | awk '{print $4}') "

set -g -q mouse on

set-option -g default-command "reattach-to-user-namespace -l zsh"

# Set reload key to r
bind r source-file ~/.tmux.conf

# Use vim bindings
setw -g mode-keys vi
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Set the title bar
# set -g set-titles on
# set -g set-titles-string '#(whoami) :: #h :: #(curl ipecho.net/plain;echo)'

# create a session and its windows/panes
# new -n servs -c "dev/harrys"
# splitw -h -p 50 -c "dev/harrys"
# neww -n base -c "dev/harrys"
# splitw -h -p 50 -c "dev/harrys"

# Smart pane switching with awareness of vim splits
is_vim_or_emacs='"#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?|emacs)(diff)?$"'
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
# is_vim_or_emacs='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?|emacs.$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$|emacs.*$' && tmux send-keys C-l) || tmux select-pane -R"

bind C-l send-keys 'C-l'

set-option -g renumber-windows on
bind c new-window -c "#{pane_current_path}"

# Tmux things about vertical/horizontal differently than vim
bind v split-window -h -c '#{pane_current_path}'  # Split panes horizontal
bind h split-window -v -c '#{pane_current_path}'  # Split panes vertically

# No idea what this is supposed to do
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
