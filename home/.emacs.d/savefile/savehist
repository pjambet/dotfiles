;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by `savehist'.

(setq savehist-minibuffer-history-variables '(shell-command-history read-expression-history magit-revision-history evil-ex-history file-name-history minibuffer-history extended-command-history))
(setq shell-command-history '("rspec spec dired" "rspec spec %" "rspec spec" "ls"))
(setq magit-revision-history '("foo-de-fafa" "master" "no-retry" "master" "foo-de-fafa"))
(setq evil-ex-history '(#("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("vsplit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #(":q" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("split" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5)) #("vsplit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("q" 0 1 (ex-index 1)) #("vsplit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("vsplit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("vsplut" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("vsplit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #(":w" 0 1 (ex-index 1) 1 2 (ex-index 2)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("vsplit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("split" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5)) #("w" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("split" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5)) #("q" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("vsplit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("w" 0 1 (ex-index 1)) #("x" 0 1 (ex-index 1)) #("w" 0 1 (ex-index 1)) #("W" 0 1 (ex-index 1)) #("q" 0 1 (ex-index 1)) #("split" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5)) #("q" 0 1 (ex-index 1)) #("split" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5)) #("hsplit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("vsplit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6)) #("x" 0 1 (ex-index 1)) #("vsplit" 0 1 (ex-index 1) 1 2 (ex-index 2) 2 3 (ex-index 3) 3 4 (ex-index 4) 4 5 (ex-index 5) 5 6 (ex-index 6))))
(setq file-name-history '("~/dev/harrys" "~/.emacs.d/init.el" "~/dev/harrys/app/models/order.rb" "~/dev/harrys/.editorconfig" "~/.emacs.d/init.el" "~/.tmux.conf" "~/dev/harrys/app/models/order.rb" "~/.tmux.conf" "~/.emacs.d/init.el" "~/dev/harrys/app/models/order.rb" "~/.emacs.d/init.el" "~/dev/harrys/app/models/order.rb" "~/dev/harrys/app/models/user.rb" "~/.emacs.d/init.el" "~/.emacs.d/core/prelude-ui.el" "~/.emacs.d/init.el" "~/dev/harrys/app/models/user.rb" "~/.emacs.d/init.el" "~/dev/harrys/app/models/" "~/.emacs.d/init.el" "~/dev/harrys/app/models/" "~/.emacs.d/init.el" "~/dev/harrys/app/models/" "~/.emacs.d/init.el" "~/dev/harrys/app/models/" "~/.emacs.d/init.el" "~/dev/harrys/app/models/" "~/.emacs.d/init.el" "~/dev/harrys/app/models/" "~/dev/harrys/app/models/order.rb" "~/.emacs.d/core/prelude-ui.el" "~/dev/harrys/app/models/order.rb" "~/.emacs.d/core/prelude-ui.el" "~/dev/harrys/app/models/order.rb" "~/dev/harrys/app/models/user.rb" "~/.emacs.d/core/prelude-ui.el" "~/.emacs.d/init.el" "~/dev/harrys/app/models/user.rb" "/Users/pierre/dev/harrys/.git/COMMIT_EDITMSG" "~/dev/harrys/app/models/user.rb" "~/.emacs.d/init.el" "~/dev/harrys/app/models/user.rb" "~/.emacs.d/init.el" "~/dev/harrys/app/models/user.rb" "~/.emacs.d/init.el" "~/dev/harrys/app/models/user.rb" "~/.emacs.d/init.el" "~/dev/harrys/app/models/user.rb" "~/.emacs.d/init.el" "~/.tmux.conf" "~/.emacs.d/init.el" "~/dev/harrys/app/models/order.rb" "~/dev/harrys/app/models/user.rb" "~/.emacs.d/init.el" "~/dev/harrys/app/models/billing_profile.rb" "~/dev/harrys/app/models/user.rb"))
(setq minibuffer-history '("appmodelsorder" "user.rb" "editorconfig" "rspec-mode" "3" "3: ~/dev/harrys*" "base" "emamux" "specmodelsuser" "evil-surround" "appmodel" "appmodelsuser" "appmodel" "evil-leader" "appmodel" "fiplr" "OperationalProduct
" "ag" "evil-visualstar" "**no retry**

**moar config**

**retry twice, only timeout, shorter timeout**

**upgrade selenium**

**longer timeout**

**no http client**

**capybara webkit**

**gstreamer**

**bundle install with QMAKE**

**env variable set globally**

**try again**

**fix resize**

**alert**

**arguments**

**spec fixes**

**foo**

**fixes**

**more fixes**

**fix authenticity token issues**

**moar fixes on the way**

**barber fix**

**admin fixes**

**lots of fixes**

**discount specs**

**shared checkout specs**

**shave plan specs**

**fix inventory level alert specs**

**discount admin specs**

**no retry**

**admin order specs**

**spec helper tweaks**

**user specs**

**cheat: use selenium for mammut spec**

**purchase spec fixes**

**attempt at fixing purchase specs**

**user specs**

**selenium for trial specs**

**attempt at caching more stuff on circle**

**different way of using ruby from circle**

**product spec -> selenium**

**better discount checkout specs**

**moar fixes, GREEN, GREEN, GREEN**

**skip db reset after test, why do we even need that?**

**product spec -> selenium**

**I give up, green?**

**shave plan**

**fucking admin order specs**

**robusitfy admin order specs**

**random failure <3**

**checkout user race condition**

**selenium**

**wholesaler factory unique issue**

**shave plan specs**

**purchase spec**

**circle spring**

**better confirm_checkout**

**revert spring**

**billing profile fix**

**redemption fix**

**billing fix**

**random product name**

**robustify purchase specs**

**foo**

**Test With magit, this looks really really cool!**

" "no retry" "foo-de-fafa" "evil-magit" "890438" "pjambet" "relative-line-numbers" "magit-gh-pulls" "evil" "solarized-theme"))
(setq extended-command-history '("load-file" "package-install" "emamux:send-command" "rspec-mode" "package-install" "emamux:send-command" "package-install" "load-file" "package-install" "load-file" "package-list-packages" "load-file" "package-install" "fiplr-find-file-other-frame" "package-install" "fiplr-find-file" "load-file" "fiplr-find-file" "load-file" "fiplr-find-file" "load-file" "fiplr-find-file" "fiplr-clear-cache" "fiplr-find-file" "package-install" "ag" "package-install" "load-file" "package-install" "list-packages" "load-file" "package-install" "magit-status" "load-file" "package-install" "load-file" "package-install" "list-packages" "package-install" "list-packages" "load-file" "list-packages" "package-install" "load-file" "list-packages" "package-install" "load-file" "list-packages" "package-install"))
(setq evil-jumps-history '((44652 "/Users/pierre/dev/harrys/app/models/order.rb") (43302 "/Users/pierre/dev/harrys/app/models/order.rb") (46686 "/Users/pierre/dev/harrys/app/models/order.rb") (3 "/Users/pierre/dev/harrys/app/models/order.rb") (13395 "/Users/pierre/dev/harrys/app/models/user.rb") (13177 "/Users/pierre/dev/harrys/app/models/user.rb") (13115 "/Users/pierre/dev/harrys/app/models/user.rb") (12941 "/Users/pierre/dev/harrys/app/models/user.rb") (13044 "/Users/pierre/dev/harrys/app/models/user.rb") (11128 "/Users/pierre/dev/harrys/app/models/user.rb") (1139 "/Users/pierre/dev/harrys/app/models/user.rb") (1084 "/Users/pierre/dev/harrys/app/models/user.rb") (14092 "/Users/pierre/dev/harrys/app/models/user.rb") (185 "/Users/pierre/dev/harrys/app/models/user.rb") (5 "/Users/pierre/dev/harrys/app/models/user.rb") (13770 "/Users/pierre/dev/harrys/app/models/user.rb") (38 "/Users/pierre/dev/harrys/app/models/order.rb") (14077 "/Users/pierre/dev/harrys/app/models/user.rb") (69 "/Users/pierre/dev/harrys/app/models/user.rb") (11400 "/Users/pierre/dev/harrys/app/models/user.rb") (200 "/Users/pierre/dev/harrys/spec/models/user_spec.rb") (160 "/Users/pierre/dev/harrys/spec/models/user_spec.rb") (105 "/Users/pierre/dev/harrys/spec/models/user_spec.rb") (871 "/Users/pierre/dev/harrys/app/models/order.rb") (2200 "/Users/pierre/.homesick/repos/dotfiles/home/.tmux.conf") (2334 "/Users/pierre/.homesick/repos/dotfiles/home/.tmux.conf") (2326 "/Users/pierre/.homesick/repos/dotfiles/home/.tmux.conf") (87 "/Users/pierre/.homesick/repos/dotfiles/home/.tmux.conf") (7218 "/Users/pierre/.emacs.d/init.el") (659 "/Users/pierre/dev/harrys/app/models/order.rb") (43317 "/Users/pierre/dev/harrys/app/models/order.rb") (36 "/Users/pierre/dev/harrys/app/models/order.rb") (88 "/Users/pierre/dev/harrys/app/models/order.rb") (25742 "/Users/pierre/dev/harrys/app/models/order.rb") (88 "/Users/pierre/dev/harrys/app/models/order.rb") (36 "/Users/pierre/dev/harrys/app/models/order.rb") (43317 "/Users/pierre/dev/harrys/app/models/order.rb") (33616 "/Users/pierre/dev/harrys/app/models/order.rb") (33086 "/Users/pierre/dev/harrys/app/models/order.rb") (26043 "/Users/pierre/dev/harrys/app/models/order.rb") (25742 "/Users/pierre/dev/harrys/app/models/order.rb") (88 "/Users/pierre/dev/harrys/app/models/order.rb") (36 "/Users/pierre/dev/harrys/app/models/order.rb") (7403 "/Users/pierre/.emacs.d/init.el") (7403 "/Users/pierre/.emacs.d/init.el") (6084 "/Users/pierre/dev/harrys/app/models/order.rb") (6090 "/Users/pierre/dev/harrys/app/models/order.rb") (25642 "/Users/pierre/dev/harrys/app/models/order.rb") (679 "/Users/pierre/dev/harrys/app/models/order.rb") (1874 "/Users/pierre/dev/harrys/app/models/refund.rb") (36 "/Users/pierre/dev/harrys/app/models/refund.rb") (35 "/Users/pierre/dev/harrys/app/models/refund.rb") (11400 "/Users/pierre/dev/harrys/app/models/user.rb") (1 "/Users/pierre/dev/harrys/spec/sweepers/inventory_sweeper_spec.rb") (1 "/Users/pierre/dev/harrys/spec/sweepers/operational_product_sweeper_spec.rb") (11400 "/Users/pierre/dev/harrys/app/models/user.rb") (7394 "/Users/pierre/.emacs.d/init.el") (1170 "/Users/pierre/.emacs.d/init.el") (6191 "/Users/pierre/.emacs.d/init.el") (6265 "/Users/pierre/.emacs.d/init.el") (6191 "/Users/pierre/.emacs.d/init.el") (6265 "/Users/pierre/.emacs.d/init.el") (6227 "/Users/pierre/.emacs.d/init.el") (6264 "/Users/pierre/.emacs.d/init.el") (6227 "/Users/pierre/.emacs.d/init.el") (6263 "/Users/pierre/.emacs.d/init.el") (6239 "/Users/pierre/.emacs.d/init.el") (6263 "/Users/pierre/.emacs.d/init.el") (6239 "/Users/pierre/.emacs.d/init.el") (7282 "/Users/pierre/.emacs.d/init.el") (7230 "/Users/pierre/.emacs.d/init.el") (7054 "/Users/pierre/.emacs.d/init.el") (6722 "/Users/pierre/.emacs.d/init.el") (6576 "/Users/pierre/.emacs.d/init.el") (6428 "/Users/pierre/.emacs.d/init.el") (6280 "/Users/pierre/.emacs.d/init.el") (5673 "/Users/pierre/.emacs.d/init.el") (5567 "/Users/pierre/.emacs.d/init.el") (3308 "/Users/pierre/.emacs.d/init.el") (3170 "/Users/pierre/.emacs.d/init.el") (2742 "/Users/pierre/.emacs.d/init.el") (7304 "/Users/pierre/.emacs.d/init.el") (7066 "/Users/pierre/.emacs.d/init.el") (6961 "/Users/pierre/.emacs.d/init.el") (5739 "/Users/pierre/.emacs.d/init.el") (4359 "/Users/pierre/.emacs.d/init.el") (5852 "/Users/pierre/.emacs.d/init.el") (5819 "/Users/pierre/.emacs.d/init.el") (4359 "/Users/pierre/.emacs.d/init.el") (7264 "/Users/pierre/.emacs.d/init.el") (7295 "/Users/pierre/.emacs.d/init.el") (5307 "/Users/pierre/.emacs.d/init.el") (5307 "/Users/pierre/.emacs.d/init.el") (5327 "/Users/pierre/.emacs.d/init.el")))
(setq search-ring '("commentaryj" "commentary" "beaconj" "beacon" "evil" "installedqq" "installed" "installedj" "installed" "magit" "git" "magitj" "magit" "tmux" "navigate" "evil"))
(setq regexp-search-ring '("update_" "ypdate_" "delete_stripe" "delte" "\\<include\\>" "comment" "evil" "ct" "ctrl" "strl" "set" "kbd" "keyb" "leader" "scroll" "evil"))
